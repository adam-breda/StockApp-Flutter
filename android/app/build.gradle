def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
//apply plugin: 'com.google.gms:google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
//apply plugin: 'com.google.gms.google-services'

// plugins {
//   id 'com.android.application'

//   // Add the Google services Gradle plugin
//   id 'com.google.gms.google-services'
// }
def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.stock_app.stock_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
       // multiDexEnabled true
    }

       signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
       release {
           signingConfig signingConfigs.release
       }
   }

}

flutter {
    source '../..'
}

// UiKitApi.Builder()
//         .withMerchantClientKey(CLIENT_KEY) // client_key is mandatory
//         .withContext(CONTEXT) // context is mandatory
//         .withMerchantUrl(BASE_URL) // set transaction finish callback (sdk callback)
//         .enableLog(true) // enable sdk log (optional)
//         .withFontFamily(ASSET_FONT)
//         .withColorTheme(CustomColorTheme("#FFE51255", "#B61548", "#FFE51255"))
//         .build()
// setLocaleNew("en")



dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-messaging:23.0.0'
     implementation platform('com.google.firebase:firebase-bom:32.2.0')
     implementation 'com.google.android.material:material:1.9.0'
    // implementation 'com.google.firebase:firebase-analytics'
    // For using the Midtrans Sandbox
    // implementation 'com.midtrans:uikit:2.0.0-SANDBOX'
    // // For using the Midtrans Production
    // implementation 'com.midtrans:uikit:2.0.0' 
    
}
// apply plugin: 'com.google.gms.google-services'

